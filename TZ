 	
Назначение приложения:

- предоставление пользователям возможности поэтапно выполнять поставленную цель как индивидуально, так и в составе команды;
- предоставление управляющему персоналу возможности создавать проект, приглашать исполнителей посредством email, ставить задачи, назначать ответственных лиц, проверять ход выполнения;
- предоставление исполнителям возможности выбирать задачу, принимать задачу, ставить отметку об успешном выполнении, отсылать запрос на помощь другим исполнителям в команде, получать приглашения в проект, а также другие извещения посредством email и личных сообщений непосредственно в профиле пользователя.

Графический дизайн:

	Дизайн должен быть выполнен в мягких тонах, графическое наполнение должно быть минималистичным. Дизайн должен быть адаптивным для последующего возможного переноса на мобильные платформы.
	Основные разделы сайты должны быть вынесены в верхнее меню главной страницы, разделы с второстепенной информацией должны быть расположены в нижней части страницы. Верхнее меню страниц создания, управления заданиями, административной части должно меняться в соответствии с производимыми на странице действиями, неизменными остаются пункты «Панель задач» и «Профиль пользователя», нижнее меню на этих страницах можно ограничить разделами помощи и обратной связи. Элементы действий на странице желательно выполнить в графической форме с всплывающими при наведении подсказками.

Функциональные требования:
Главная страница:
1. Верхнее меню:
1.1. В левой части логотип проекта.
1.2. По центру текущее время пользователя.
1.3. Справа - «Начать проект», «Присоединиться к проекту», визуальный разделитель, «Вход», «Регистрация» для неавторизованных/незарегистрированных пользователей, для авторизованных - «Панель задач», «Панель управления», «Профиль пользователя». При нажатии на «Вход» — всплывающее окно с полями для логина и пароля, значками соцсетей, при нажатии на «Регистрация» - переход на страницу регистрации. При нажатии на остальные кнопки — переход в соответствующие разделы.

2. Центральная часть страницы:
2.1. Схематичное изображение процесса создания проекта и задачи в виде серии картинок либо в виде carousel;
2.2. Кнопка «Начать проект», при нажатии пользователем, зарегистрированным в системе - переход на страницу с созданием проекта либо перерисовка страницы средствами JavaScript, при нажатии незарегистрированным пользователем — переход на страницу регистрации;
- если переход был по приглашению из email, большая кнопка «Присоединиться к проекту», при нажатии — переход на страницу со списком задач.
3. Нижнее меню:
3.1. Раздел «Помощь» с подразделами «FAQ», «Краткое руководство».
3.2. Возможный раздел «О нас» (может и не стоит)
3.3. Форма обратной связи — поля «Тема», «Сообщение», кнопка «Отправить».
3.4. Раздел «Мы в соцсетях» со значками соцсетей.
Страница регистрации:
Верхнее меню – только пункт «Главная» с переходом на главную страницу, нижнее меню – только пункт «Помощь». Фон тёмных цветов. Форма содержит следующие элементы:
- Имя – текстовое поле, 50 символов;
- Email – поле email;
- Пароль – поле password (длина не менее 8 символов)
Текст «Войти через соцсети» со значками VK, Twitter, Github, Facebook.
Кнопка «Создать», при нажатии переход на главную с выводом сообщения «Ваша учетная запись успешно создана. Пожалуйста, перейдите по ссылке, высланной на email, указанный для регистрации, для активации учетной записи» - при успешном завершении процесса или переход на главную с выводом сообщения «Извините, не удалось завершить процесс регистрации. Пожалуйста, попробуйте ещё раз». Сообщения выводятся с помощью messages framework django или средствами javascript.
 
Страница входа:
Страница входа представляет собой всплывающее окно со следующими элементами:
- Имя
- Пароль
Значки VK, Twitter, Github, Facebook
Ссылка «Забыли пароль?»
Кнопка «Войти»

Страница создания проекта:
  Всплывающая окно со следующими элементами:
- Название проекта
- Описание проекта
- Всплывающее меню со статусом (приватный, командный, публичный)
- Кнопка “Создать проект”

Страница создания команды:
 Всплывающая окно со следующими элементами:
- Название команды
- Описание команды
- Кнопка “Создать команду”

Страница создания задания:
  Всплывающая окно со следующими элементами:
- Название задания
- Участники
- Приоритет
- Кнопка “Создать задание”

Страница просмотра доступных проектов:
Шапка: название проекта, краткое описание, статус с кнопкой редактировать проект
В нижней части шапки меню управления проектом : этапы, участники, настройки
Тело страницы зависит от выбранного пункта меню

Страница просмотра доступных заданий:
Переход осуществляется при клике на определенный этап проекта. Состоит из упорядоченных (в соответствии с приоритетом) блоков с заданиями. Каждый блок включает в себя: название, дату создания, дату завершения, выпадающее меню (3 точки), состоящее из исполнителей и приоритета. 
 
Страница профиля:
Шапка: аватар, имя, email, login, кнопка редактировать профиль
В теле страницы: мои команды с возможностью перехода к просмотру команды, 
мои действия - список совершенных пользователем действий (возможно, с опцией отозвать действие (revert comit)) 

 
Технические требования:
 
БД – PostgreSQL;
 
Backend – Django framework с модулями social-auth-app-django, rest-framework;
 
Frontend – HTML5, CSS, VueJS
 
CVS – git, центральный репозиторий – private on Github.com.
 
Работа с базой данных – Django ORM.
 
Работа с запросами – Django REST Framework.
 
Отрисовка frontend – VueJS.
 
Codestyle – PEP8
 
Comments – PEP257

Модели:
User - пользователь сайта
Поля:
name - имя пользователя, type Char
position - должность, type Char
email - Электронная почта пользователя, type Email
role - Роль пользователя, type Char
avatar - Аватар пользователя, type Image
is_active - Статус пользователя, type Boolean

Project - проект
Поля:
slug - Уникальный строчный идентификатор, type SlugField
Users - отношение с моделью User, type ManyToMany
name - Название проекта, type Char
description - Описание проекта, type Text
date_start - Дата начала разработки проекта, type Date
date_end - Планируемая дата завершения работы над проектом, type Date

Stage - этап проекта
Поля:
id_project - Внешний ключ на модель Project, type ForeignKey
name - Наименование этапа, type Char
description - Описание этапа, type Text
date_start - Дата начала выполнения этапа, type Date
date_end - Планируемая дата завершения этапа, type Date
status - Статус завершения этапа

Task - задача
Поля:
id_stage - Внешний ключ на модель Stage, type ForeignKey
id_user - Внешний ключ на модель User, type ForeignKey
name - Наименование задачи, type Char
description - Описание задачи, type Text
date_start - Дата начала выполнения задачи, type Date
date_end - Планируемая дата завершения задачи, type Date
status - Статус завершения выполнения задачи




